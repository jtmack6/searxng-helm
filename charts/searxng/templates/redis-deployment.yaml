{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "searxng.fullname" . }}-redis
  labels:
    {{- include "searxng.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "searxng.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "searxng.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy | default "IfNotPresent" }}
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        env:
        {{- if .Values.redis.auth.enabled }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "searxng.fullname" . }}-redis
              key: redis-password
        {{- else }}
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        {{- end }}
        {{- if .Values.redis.resources }}
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        {{- end }}
      {{- if .Values.redis.persistence.enabled }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ include "searxng.fullname" . }}-redis
      {{- end }}
{{- end }}
